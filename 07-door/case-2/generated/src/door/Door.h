/*
 *  ==============================================================================
 *  Created by Fehmi Demiralp(Fedem) on 2025-05-29 GMT
 *  Copyright (C) 2023-2025 Fedem (Fehmi Demiralp) <f.demiralp@gmail.com>
 *
 *  This file is generated by UMTSM using the code generator `CGen`
 *
 *  !!! It is highly recommended that DO NOT EDIT THIS GENERATED FILE !!!
 *
 *  Released under the MIT License
 *  ============================================================================
 */

/*
 *  Copyright (C) 2023-2025 Fedem (Fehmi Demiralp) <f.demiralp@gmail.com>
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

#ifndef Door_h__INCLUDED
#define Door_h__INCLUDED

#ifdef __cplusplus
extern "C"
{
#endif /* __cplusplus */
 
#include <stdbool.h>
#include <stdint.h>

#include <pthread.h>

#include <Door_DataType.h>

typedef enum E_Door_Main_States
{
  E_Door_init,
  E_Door_Main,
  E_Door_Open,
  E_Door_Closing,
  E_Door_Close,
  E_Door_Opening,
  E_Door_final
} E_Door_Main_States_t;

typedef struct S_SM_Door
{
  pthread_mutex_t guard;
  struct
  {
    E_Door_Main_States_t Main;
  } runningState;
  struct
  {
    struct
    {
      pthread_t threadHandle;
      uint8_t stack[4224U];
    } Open;
  } doFunctionHandler;
  struct
  {
    E_Door_Main_States_t shallow_Main;
  } storedState;
  S_SM_Door_DataType_t instanceData;
} S_SM_Door_t;

void Door_Initialize( S_SM_Door_t* const pStateMachine );
void Door_Deinitialize( S_SM_Door_t* const pStateMachine );

void Door_Start( S_SM_Door_t* pStateMachine );

bool Door_IsIn_Main_Region( S_SM_Door_t* const pStateMachine );

bool Door_IsIn_Main_State( S_SM_Door_t* const pStateMachine );
bool Door_IsIn_Open_State( S_SM_Door_t* const pStateMachine );
bool Door_IsIn_Closing_State( S_SM_Door_t* const pStateMachine );
bool Door_IsIn_Close_State( S_SM_Door_t* const pStateMachine );
bool Door_IsIn_Opening_State( S_SM_Door_t* const pStateMachine );

void Door_Run_ButtonPressed( S_SM_Door_t* pStateMachine );
void Door_Run_DoorClosed( S_SM_Door_t* pStateMachine );
void Door_Run_DoorOpen( S_SM_Door_t* pStateMachine );

S_SM_Door_DataType_t* Door_GetData( S_SM_Door_t* const pStateMachine );

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* Door_h__INCLUDED */

/* End of Door.h */
