/*
 *  ==============================================================================
 *  Created by Fehmi Demiralp(Fedem) on 2025-05-22 GMT
 *  Copyright (C) 2023-2025 Fedem (Fehmi Demiralp) <f.demiralp@gmail.com>
 *
 *  This file is generated by UMTSM using the code generator `CGen`
 *
 *  Released under the MIT License
 *  ============================================================================
 */

/*
 *  Copyright (C) 2023-2025 Fedem (Fehmi Demiralp) <f.demiralp@gmail.com>
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

#include <Crossroad_Helper.hh>

namespace
{
  using namespace ::std;
  using namespace ::testing;
  using namespace ::sm::test;
  using ::testing::_;
} // namespace

namespace
{

  TEST( Crossroad, DISABLED_Start )
  {
    int instanceData = 0;
    S_SM_Crossroad_t sm;

    Crossroad_Initialize( &sm );
    Crossroad_Start( &sm );

    EXPECT_EQ( sm.runningState.Main, E_Crossroad_Main );
    EXPECT_EQ( sm.runningState.RgLane1, E_Crossroad_Lane1 );
    EXPECT_EQ( sm.runningState.RgLane2, E_Crossroad_Lane2 );
    EXPECT_EQ( sm.runningState.RgLane3, E_Crossroad_Lane3 );
    EXPECT_EQ( sm.runningState.RgLane4, E_Crossroad_Lane4 );
    EXPECT_EQ( sm.runningState.RgPedestrianLanes, E_Crossroad_PedestrianLanes );
    EXPECT_EQ( sm.runningState.RgTrafficLight1, E_Crossroad_TrafficLight1 );
    EXPECT_EQ( sm.runningState.RgTrafficLight2, E_Crossroad_TrafficLight2 );
    EXPECT_EQ( sm.runningState.RgTrafficLight3, E_Crossroad_TrafficLight3 );
    EXPECT_EQ( sm.runningState.RgTrafficLight4, E_Crossroad_TrafficLight4 );
    EXPECT_EQ( sm.runningState.RgPedestrianLights, E_Crossroad_PedestrianLights );
  }
} // namespace

// End of Crossroad_InitTests.cpp
