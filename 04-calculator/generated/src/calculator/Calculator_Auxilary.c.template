/*  ==============================================================================
 *  Created by Fehmi Demiralp(Fedem) on 2024-11-02 GMT
 *  Copyright (C) 2023-2024 Fedem (Fehmi Demiralp) <f.demiralp@gmail.com>
 *
 *  This file is generated by UMTSM using the code generator `CGen`
 *
 *  Released under the MIT License
 *  ==============================================================================
 */

/*  Copyright (C) 2023-2024 Fedem (Fehmi Demiralp) <f.demiralp@gmail.com>
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */

#include "Calculator_Auxilary.h"

#include <assert.h>
#include <memory.h>
#include <pthread.h>
#include <signal.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdlib.h>
#include <unistd.h>

/* The implementation of the guards */
bool Calculator_HasDivisionByZeroError(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInstance )
{
  bool const result = false;
  return result;
} /* End of guard function: Calculator_HasDivisionByZeroError */

bool Calculator_HasOverflowError(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInstance )
{
  bool const result = false;
  return result;
} /* End of guard function: Calculator_HasOverflowError */

bool Calculator_IsBaseZero(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInstance )
{
  bool const result = false;
  return result;
} /* End of guard function: Calculator_IsBaseZero */

bool Calculator_IsExponentZero(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInstance )
{
  bool const result = false;
  return result;
} /* End of guard function: Calculator_IsExponentZero */

bool Calculator_IsFaulty(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInstance )
{
  bool const result = false;
  return result;
} /* End of guard function: Calculator_IsFaulty */

bool Calculator_IsFractionZero(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInstance )
{
  bool const result = false;
  return result;
} /* End of guard function: Calculator_IsFractionZero */

bool Calculator_IsThereSpaceForExponent(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInstance )
{
  bool const result = false;
  return result;
} /* End of guard function: Calculator_IsThereSpaceForExponent */

/* The implementation of the actions */
void Calculator_Additions(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_Additions */

void Calculator_Calculate(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_Calculate */

void Calculator_ChangeBaseSign(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_ChangeBaseSign */

void Calculator_ChangeExponetSign(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_ChangeExponetSign */

void Calculator_CheckErrorStatus(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_CheckErrorStatus */

void Calculator_ClearExponent(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_ClearExponent */

void Calculator_ClearFraction(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_ClearFraction */

void Calculator_ClearLastEntry(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_ClearLastEntry */

void Calculator_Divides(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_Divides */

void Calculator_DrawSpliteLine(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_DrawSpliteLine */

void Calculator_EraseBaseDigit(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_EraseBaseDigit */

void Calculator_EraseExponentDigit(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_EraseExponentDigit */

void Calculator_EraseFractionDigit(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_EraseFractionDigit */

void Calculator_Multiplications(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_Multiplications */

void Calculator_NotifyDisplayUpdate(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_NotifyDisplayUpdate */

void Calculator_NotifyDivisionByZeroError(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_NotifyDivisionByZeroError */

void Calculator_NotifyFaultError(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_NotifyFaultError */

void Calculator_NotifyOverflowError(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_NotifyOverflowError */

void Calculator_NotifyReset(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_NotifyReset */

void Calculator_PushBaseDigit(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_PushBaseDigit */

void Calculator_PushExponentDigit(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_PushExponentDigit */

void Calculator_PushFractionDigit(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_PushFractionDigit */

void Calculator_RemoveZerosFromFraction(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_RemoveZerosFromFraction */

void Calculator_ResetAccumulations(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_ResetAccumulations */

void Calculator_SetExponentEntry(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_SetExponentEntry */

void Calculator_SetFractionEntry(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_SetFractionEntry */

void Calculator_Substractions(
  __attribute__( ( unused ) ) S_SM_Calculator_t* const smInfo,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t const* const pInputData,
  __attribute__( ( unused ) ) S_SM_Calculator_DataType_t* const pOutputData )
{
} /* End of action function: Calculator_Substractions */

/* End of Calculator_Auxilary.c */
